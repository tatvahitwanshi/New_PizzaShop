@model DataAccessLayer.ViewModels.MenuViewModel


<div class="row">
    <div class="col">
        <span class="h4 fw-bold " style="color: #0066A7;" data-bs-toggle="offcanvas" href="#offcanvasExample1"
            role="button1" aria-controls="offcanvasExample1">Items</span>
    </div>
</div>
<div class="row">
    <div class="col-12 d-flex justify-content-end">
        <form class="d-flex " role="search">
            <div class="d-flex  me-2 p-1 position-relative">
                <input class="search_input form-control me-2 border-0" type="text" placeholder="Search"
                    aria-label="Search" id="searchInputItem" value="@Model.Items.SearchKey">

                <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor"
                    class="bi bi-search position-absolute search-icon-main" viewBox="0 0 16 16" onclick="searchItems()">
                    <path
                        d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
            </div>
            <div class="  btn border " id="massDeleteBtn"><i class="bi bi-trash h4 text-muted"></i></div>
            <button class="btn text-white d-none d-md-block ms-2" style=" background-color: #0066A7;" type="button"
                data-bs-toggle="modal" data-bs-target="#additemModal">
                +New Item</button>
            <button class="btn text-white d-md-none ms-2" style=" background-color: #0066A7;">+</button>
        </form>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"><input class="form-check-input main-check" type="checkbox" value=""
                                id="selectAllCheckbox"></th>
                        <th scope="col">Name</th>
                        <th scope="col">Item Type</th>
                        <th scope="col">Rate </th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Available</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody id="itemsTableBody">
                    @foreach (var item in Model.Items.List)
                    {
                        <tr>
                            <td>
                                <input class="form-check-input inner-check" type="checkbox" data-id="@item.ItemId">
                            </td>
                            <td>
                                @if (item.Itemimage != null)
                                {
                                    <img src="@Url.Content(item.Itemimage)" alt="" width="30px">

                                }
                                else
                                {
                                    <img src="~/images/dining-menu.png" alt="" width="30px">

                                }
                                @* src="@item.Itemimage" *@
                                @item.Itemname
                            </td>
                            <td>
                                <img src="~/images/icons/@(item.Itemtype == "veg" ? "veg-icon.svg" : "non-veg-icon.svg")"
                                    width="20px" alt="">
                            </td>
                            <td>@item.Rate</td>
                            <td>@item.Quantity</td>
                            <td>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" style="width: 2.5rem; height: 25px;" type="checkbox"
                                        role="switch" @(item.Isavailable ?? false ? "checked" : "")>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex">
                                    <a href="#" style="text-decoration: none; color: grey;" data-bs-toggle="modal"
                                        data-bs-target="#edititemModal" onclick="GetItemDetails(@item.ItemId)">
                                        <i class="bi bi-pen"></i>
                                    </a>
                                    <a href="#" class="ms-4" style="text-decoration: none; color: grey;"
                                        data-bs-toggle="modal" data-bs-target="#itemdeleteModal"
                                        onclick="openItemDeleteModal(@item.ItemId)"><i class="bi bi-trash"></i></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
        <div class="main-pagination ">
            <div class="item-show ">
                <nav aria-label="Page navigation example">
                    <div class="pagination ">
                        <span class="align-self-center">Items Per Page
                            :</span>
                        <select class="form-select form-select-sm ms-2 align-self-center"
                            aria-label="Small select example" style=" width: unset; " id="pageSizeDropdownItem"
                            onchange="updatePageSize()">
                            @if (Model.Items.PageSize != null)
                            {
                                <option value="1" selected="@(Model.Items.PageSize == 1 ? true : false)">1</option>
                                <option value="3" selected="@(Model.Items.PageSize == 3 ? true : false)">3</option>
                                <option value="5" selected="@(Model.Items.PageSize == 5 ? true : false)">5</option>
                                <option value="10" selected="@(Model.Items.PageSize == 10 ? true : false)">10</option>
                                <option value="25" selected="@(Model.Items.PageSize == 25 ? true : false)">25</option>
                            }
                        </select>

                    </div>
                </nav>
            </div>
            <div class="showing-page">
                <nav aria-label="Page navigation example">
                    <div class="pagination ">
                        <span class=" ms-2  align-self-center">Showing
                            @{
                                var startRecord = (Model.Items.PageNumber - 1) * Model.Items.PageSize + 1;
                                var endRecord = Model.Items.PageNumber * Model.Items.PageSize;
                                if (endRecord > Model.Items.Count)
                                    endRecord = Model.Items.Count;

                                if (Model.Items.Count == 0)
                                {
                                    startRecord = 0;
                                    endRecord = 0;
                                }
                            }
                            <span style="color: green;" class="me-1">@startRecord - @endRecord</span> of <span
                                style="color: red;" class="ms-1">@Model.Items.Count</span>
                        </span>
                        <button class="btn border ms-2  align-self-center" type="submit"
                            onclick="PanginationBtn('back')"><i class="bi bi-chevron-left "></i>
                        </button>
                        <button class="btn border ms-2  align-self-center" type="submit"
                            onclick="PanginationBtn('next')"><i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </nav>
            </div>

        </div>
    </div>
</div>



@* Add Item Modal *@
<div class="modal fade" id="additemModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false"
    aria-labelledby="staticBackdropLabel" aria-hidden=" true">
    <div class="modal-dialog modal-dialog-centered w-75" style="max-width: 100% !important">
        <div class="modal-content">
            <form class="modal-body additemform" id="additemform" enctype="multipart/form-data">
                <div class="d-flex justify-content-between">
                    <div class="special-color fw-bold fs-4">Add Item</div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="row pe-2 mt-2">
                    <div class="col-md-8 col-12">
                        <div class="row">
                            <div class="col-md-6 col-12 form-floating mt-3">
                                <select class="form-select" id="categoryDropdown" name="CategoryId" required>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.CategoryId">@category.Categoryname</option>
                                    }
                                </select>
                                <label for="categoryDropdown">Food Category</label>
                            </div>

                            <div class="col-md-6 col-12 form-floating mt-3">
                                <input type="text" class="form-control" id="name" placeholder="Name" name="Itemname"
                                    required>
                                <label for="name">Name*</label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <select class="form-select" id="itemTypeDropdown" name="Itemtype" required>
                                            <option value="veg" selected>Veg</option>
                                            <option value="non-veg">Non-veg</option>

                                        </select>
                                        <label for="itemTypeDropdown">Item Type</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="name" placeholder="Name" min="0"
                                            step="1" name="Rate" required>
                                        <label for="name">Rate*</label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="quantity" placeholder="Name"
                                            min="0" step="1" name="Quantity" required>
                                        <label for="quantity">Quantity*</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <select class="form-select" id="unitDropdown" name="UnitId" required>
                                            @foreach (var itemsUnit in Model.ItemsUnit)
                                            {
                                                <option value="@itemsUnit.Unitid">@itemsUnit.Unitname</option>
                                            }
                                        </select>
                                        <label for="unitDropdown">Unit</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xl-6 col-12 mt-3">
                                <div class="row">
                                    <div
                                        class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                        <input class="form-check-input" type="checkbox" id="availableToggle"
                                            style="height: 30px; width: 3.5rem;" name="ItemAvailable">
                                        <label class="form-check-label ms-2" for="availableToggle">Available</label>
                                        <input type="hidden" name="Isavailable" value="false">
                                    </div>
                                    <div
                                        class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                        <input class="form-check-input" type="checkbox" id="defaultTaxToggle"
                                            style="height: 30px; width: 3.5rem;" name="Defaulttax">
                                        <label class="form-check-label ms-2" for="defaultTaxToggle">Default Tax</label>
                                        <input type="hidden" name="Defaulttax" value="false">
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="taxpercentage" placeholder="Name"
                                            min="0" step="0.01" name="Taxpercentage">
                                        <label for="taxpercentage">Tax Percentage</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="text" class="form-control" id="shortcode" placeholder="Name"
                                            name="Shortcode">
                                        <label for="shortcode">Short Code</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="form-floating">
                                <textarea class="form-control" id="description" placeholder="Enter description" rows="5"
                                    style="height: 100px;" name="Itemdescription" required></textarea>
                                <label for="description">Description</label>
                            </div>
                        </div>


                        <div class="mt-3 fs-6" style="opacity: 0.75;">Upload Image</div>
                        <div class="row mt-0">
                            <div style="position: relative;" id="fileLabel">
                                <input type="file" class="form-control" id="itemImage" placeholder=""
                                    style="height: 90px; position: absolute; opacity: 0;" name="Itemimage">
                                <div id="file-box"
                                    style="height: 90px; border: 1px dashed rgb(173, 170, 170); border-radius: 5px;"
                                    class="d-flex justify-content-center align-items-center">
                                    <i class="bi bi-cloud-arrow-up h4 mt-3 me-2"></i>Drag and Drop or Browse files
                                </div>
                            </div>
                        </div>

                    </div>
                    <input type="hidden" id="modGroupDataInput" name="AddModGroupWithItems" />
                    <div class="col-md-4 mt-3 col-12 px-2  overflow-auto"
                        style="background-color: #fff5d7; border-radius: 5px; height: 500px;">
                        <div class="dropdown mt-2">
                            <button class="btn btn-light dropdown-toggle w-100" type="button" id="modifierGroupDropdown"
                                data-bs-toggle="dropdown" aria-expanded="false">
                                Select Modifier Group
                            </button>
                            <ul class="dropdown-menu w-100" aria-labelledby="modifierGroupDropdown" id="modgroupAll">
                                @foreach (var modgroup in Model.ModifierGroupModel)
                                {
                                    <li>
                                        <label class="dropdown-item">
                                            <input type="checkbox" value="@modgroup.ModifierGroupId" class="me-2"
                                                name="modgroupCheckbox"> @modgroup.ModifierGroupName
                                        </label>
                                    </li>
                                }

                            </ul>
                        </div>
                        <div class="" id="modifierGroupDetail">

                        </div>
                    </div>
                    <div class="" onclick="GetModGroupData()">
                        click here
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" id="savebtn" class="btn text-white" style="background-color: #0066A7;"
                        type="submit">Save</button>
                    <button type="button" class="btn ms-2"
                        style="border-color: #0066A7; color: #0066A7; text-decoration: none;"
                        data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Edit Item Model *@
<div class="modal fade" id="edititemModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false"
    aria-labelledby="staticBackdropLabel aria-hidden=" true">
    <div class="modal-dialog modal-dialog-centered w-75" style="max-width: 100% !important">
        <div class="modal-content">
            <form class="modal-body edititemform" id="edititemform" enctype="multipart/form-data">
                <input type="hidden" id="editItemId" name="ItemId">
                <div class="d-flex justify-content-between">
                    <div class="special-color fw-bold fs-4">Edit Item</div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="row pe-2 mt-2">
                    <div class="col-md-8 col-12">
                        <div class="row">
                            <div class="col-md-6 col-12 form-floating mt-3">
                                <select class="form-select" id="editcategoryDropdown" name="CategoryId" required>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.CategoryId">@category.Categoryname</option>
                                    }
                                </select>
                                <label for="editcategoryDropdown">Food Category</label>
                            </div>

                            <div class="col-md-6 col-12 form-floating mt-3">
                                <input type="text" class="form-control" id="editname" placeholder="Name" name="Itemname"
                                    required>
                                <label for="editname">Name*</label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <select class="form-select" id="edititemTypeDropdown" name="Itemtype" required>
                                            <option value="veg" selected>Veg</option>
                                            <option value="non-veg">Non-veg</option>

                                        </select>
                                        <label for="edititemTypeDropdown">Item Type</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="editrate" placeholder="Name"
                                            min="0" step="1" name="Rate" required>
                                        <label for="editrate">Rate*</label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="editquantity" placeholder="Name"
                                            min="0" step="1" name="Quantity" required>
                                        <label for="editquantity">Quantity*</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <select class="form-select" id="editunitDropdown" name="UnitId" required>
                                            @foreach (var itemsUnit in Model.ItemsUnit)
                                            {
                                                <option value="@itemsUnit.Unitid">@itemsUnit.Unitname</option>
                                            }
                                        </select>
                                        <label for="editunitDropdown">Unit</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xl-6 col-12 mt-3">
                                <div class="row">
                                    <div
                                        class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                        <input class="form-check-input" type="checkbox" id="editavailableToggle"
                                            style="height: 30px; width: 3.5rem;" name="ItemAvailable">
                                        <label class="form-check-label ms-2" for="editavailableToggle">Available</label>
                                        <input type="hidden" name="Isavailable" value="false">
                                    </div>
                                    <div
                                        class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                        <input class="form-check-input" type="checkbox" id="editdefaultTaxToggle"
                                            style="height: 30px; width: 3.5rem;" name="Defaulttax">
                                        <label class="form-check-label ms-2" for="editdefaultTaxToggle">Default
                                            Tax</label>
                                        <input type="hidden" name="Defaulttax" value="false">
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-6 col-12">
                                <div class="row">
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="number" class="form-control" id="edittaxpercentage"
                                            placeholder="Name" min="0" step="0.01" name="Taxpercentage">
                                        <label for="edittaxpercentage">Tax Percentage</label>
                                    </div>
                                    <div class="col-md-6 col-12 form-floating mt-3">
                                        <input type="text" class="form-control" id="editshortcode" placeholder="Name"
                                            name="Shortcode">
                                        <label for="editshortcode">Short Code</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="form-floating">
                                <textarea class="form-control" id="editdescription" placeholder="Enter description"
                                    rows="5" style="height: 100px;" name="Itemdescription" required></textarea>
                                <label for="editdescription">Description</label>
                            </div>
                        </div>


                        <div class="mt-3 fs-6" style="opacity: 0.75;">Upload Image</div>
                        <div class="row mt-0">
                            <div style="position: relative;" id="fileLabel">
                                <input type="file" class="form-control" id="edititemImage" placeholder=""
                                    style="height: 90px; position: absolute; opacity: 0;" name="Itemimage">
                                <div id="file-box"
                                    style="height: 90px; border: 1px dashed rgb(173, 170, 170); border-radius: 5px;"
                                    class="d-flex justify-content-center align-items-center">
                                    <i class="bi bi-cloud-arrow-up h4 mt-3 me-2"></i>Drag and Drop or Browse files
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="col-md-4 mt-3 col-12 px-2  overflow-auto"
                        style="background-color: #fff5d7; border-radius: 5px; height: 500px;">
                        <div class="dropdown mt-2">
                            <button class="btn btn-light dropdown-toggle w-100" type="button" id="modifierGroupDropdown"
                                data-bs-toggle="dropdown" aria-expanded="false">
                                Select Modifier Group
                            </button>
                            <ul class="dropdown-menu w-100" aria-labelledby="modifierGroupDropdown" id="modgroupAll">
                                @foreach (var modgroup in Model.ModifierGroupModel)
                                {
                                    <li>
                                        <label class="dropdown-item">
                                            <input type="checkbox" value="@modgroup.ModifierGroupId" class="me-2"
                                                name="modgroupCheckbox"> @modgroup.ModifierGroupName
                                        </label>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="" id="editmodifierGroupDetail">

                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" id="editsavebtn" class="btn text-white" style="background-color: #0066A7;"
                        type="submit">Save</button>
                    <button type="button" class="btn ms-2"
                        style="border-color: #0066A7; color: #0066A7; text-decoration: none;"
                        data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
@* Delete Item Model *@
<div class="modal fade" id="itemdeleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="" style="width: 10%; height: 10%;">
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <span class="text-muted">Are you sure you want to delete this Item?</span>
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <button class="btn text-white" style="background-color: #0066A7;" type="button"
                        id="itemconfirmDeleteBtn">Yes</button>
                    <button class="btn ms-2" style="border-color: #0066A7; color: #0066A7;" type="button"
                        data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap Bundle (includes Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>

    function loadItems(pageSize, searchKey, pageNumber) {
        console.log("Page Size:", pageSize, "Search Key:", searchKey, "Page Number:", pageNumber);

        $.ajax({
            url: '@Url.Action("GetItemsByCategory", "Menu")',
            type: 'GET',
            data: {
                categoryId: @Model.Items.ParentId,
                PageSize: pageSize,
                SearchKey: searchKey,
                PageNumber: pageNumber
            },
            success: function (data) {
                $("#itemsContainer").html(data);
            },
            error: function (error) {
                console.error('Error loading partial view:', error);
                $("#itemsContainer").html("<p>Error loading items.</p>");
            }
        });
    }

    function updatePageSize() {
        var pageSize = $("#pageSizeDropdownItem").val();
        var searchKey = $("#searchInputItem").val();
        var pageNumber = @Model.Items.PageNumber;

        loadItems(pageSize, searchKey, pageNumber);
    }

    function PanginationBtn(direction) {
        var pageSize = $("#pageSizeDropdownItem").val();
        var searchKey = $("#searchInputItem").val();
        var pageNumber = @Model.Items.PageNumber;

        if (direction === "back") {
            pageNumber -= 1;
        } else {
            pageNumber += 1;
        }

        loadItems(pageSize, searchKey, pageNumber);
    }

    function searchItemsEnter(event) {
        if (event.key === "Enter") {
            searchItems();
        }
    }
    document.addEventListener('keydown', function (event) {
        // Check if the pressed key is the Enter key
        if (event.key === 'Enter') {
            // Do something when Enter is pressed
            console.log('Enter key was pressed!');
            searchItems();
        }
    });

    function searchItems() {
        var pageSize = $("#pageSizeDropdownItem").val();
        var searchKey = $("#searchInputItem").val();
        var pageNumber = @Model.Items.PageNumber;

        loadItems(pageSize, searchKey, pageNumber);
    }


    document.getElementById("defaultTaxToggle").addEventListener("change", function () {
        if (this.checked) {
            this.value = "true";
        } else {
            this.value = "false";
        }
    });
    document.getElementById("availableToggle").addEventListener("change", function () {
        if (this.checked) {
            this.value = "true";
        } else {
            this.value = "false";
        }
    });
    @* -------------------------------------------------------------- Add Item--------------------------------------------------------------------- *@
        function GetModGroupData() {
            var modgroupAll = [];
            $('.mod-group-detail').each(function () {
                var modifierGroupId = $(this).find('.deleteOneGroup').data('modgroupid');
                var minValue = $(this).find('.min-Select').val();
                var maxValue = $(this).find('.max-Select').val();
                modgroupAll.push({
                    ModifierGroupId: modifierGroupId,
                    min: minValue,
                    max: maxValue
                });
            });
            return modgroupAll; // Return the collected data
        }

    $(document).ready(function () {
        $(document).on('click', '#savebtn', function (e) {
            e.preventDefault();

            var formElement = document.querySelector(".additemform");
            var formData = new FormData(formElement);

            // Get Modifier Group Data and append it
            var modGroupData = GetModGroupData();
            formData.append("AddModGroupWithItems", JSON.stringify(modGroupData));

            $.ajax({
                url: '@Url.Action("AddItemsPost", "Menu")',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.success) {
                        console.log('Item added successfully:', data);
                        window.location.href = data.redirectUrl;
                    } else {
                        alert("Failed to add item. Please check the inputs.");
                    }
                },
                error: function (error) {
                    console.error('Error adding item:', error);
                    alert("An error occurred while adding the item.");
                }
            });
        });
    });

    document.getElementById("itemImage").addEventListener("change", function () {
        let fileLabel = document.getElementById("fileLabel");
        if (this.files.length > 0) {
            fileLabel.style.border = "2px solid green";
        } else {
            fileLabel.style.border = "2px solid rgba(112, 128, 144, 0.123)";
        }
    });

    @* -------------------------------------------------------------- Edit Item--------------------------------------------------------------------- *@

        function GetItemDetails(itemId) {
            $.ajax({

                url: '/Menu/GetItemById',  // Controller action to get item details
                type: 'GET',
                data: { id: itemId },
                success: function (data) {
                    if (data) {
                        console.log("Fetched Item Data:", data);
                        $('#editItemId').val(data.itemId);
                        $('#editcategoryDropdown').val(data.categoryId);
                        $('#editname').val(data.itemname);
                        $('#edititemTypeDropdown').val(data.itemtype);
                        $('#editrate').val(data.rate);
                        $('#editquantity').val(data.quantity);
                        $('#editunitDropdown').val(data.unitId);
                        $('#editavailableToggle').prop('checked', data.isavailable);
                        $('#editdefaultTaxToggle').prop('checked', data.defaulttax);
                        $('#edittaxpercentage').val(data.taxpercentage);
                        $('#editshortcode').val(data.shortcode);
                        $('#editdescription').val(data.itemdescription);
                        $('#edititemImage').val(data.itemimage);
                        $('#editmodifierGroupDetail').empty();
                        console.log(data.addModGroupWithItems)
                        $('#editmodifierGroupDetail').empty();

                        // Load modifier group details
                        @* if (data.addModGroupWithItems && data.addModGroupWithItems.length > 0) {
                            data.addModGroupWithItems.forEach(function (group) {
                                @* GetModifierGroupDetailsForEdit(group.modifierGroupId,itemId); 
                            });
                        } *@
                            setTimeout(() => {
                                let dropdownElements = document.querySelectorAll('.dropdown-toggle');
                                dropdownElements.forEach(dropdownEl => {
                                    new bootstrap.Dropdown(dropdownEl);
                                });
                            }, 100);
                    }
                },
                error: function () {
                    alert("Error fetching item details.");
                }
            });
        }
    function GetModifierGroupDetailsForEdit(modifierGroupId, itemId) {
        $.ajax({
            url: '/Menu/GetModifierGroupDetails',
            type: 'GET',
            data: { modifierGroupId: modifierGroupId, itemId: itemId },
            success: function (response) {
                if ($('#editmodifierGroupDetail').find(`.mod-group-${modifierGroupId}`).length === 0) {
                    $('#editmodifierGroupDetail').append(
                        `<div class="mod-group-${modifierGroupId} mod-group-detail mt-2">
                        ${response}
                    </div>`
                    );
                }
            },
            error: function () {
                console.log("Error loading modifier group details.");
            }
        });
    }

    $(document).ready(function () {
        $("#edititemform").submit(function (e) {
            e.preventDefault();

            var formData = new FormData(this); // Create FormData object for handling file uploads

            $.ajax({
                url: '/Menu/EditItems',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        alert("Item updated successfully!");
                        $('#edititemModal').modal('hide');
                        location.reload();
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    alert("An error occurred while saving the item.");
                }
            });
        });
    });
    document.getElementById("editdefaultTaxToggle").addEventListener("change", function () {
        if (this.checked) {
            this.value = "true";
        } else {
            this.value = "false";
        }
    });

    @* --------------------------------------------------------Delete And Mass Delete Item--------------------------------------------------------- *@

        deleteItemIds =[]; // Store selected item IDs
    function openItemDeleteModal(itemId = null) {
        deleteItemIds = []; // Reset array

        if (itemId) {
            console.log("Single delete");
            deleteItemIds.push(itemId); // Single delete
        } else {
            console.log("Multiple delete");
            $(".inner-check:checked").each(function () {
                deleteItemIds.push($(this).data("id")); // Fix selector
            });
        }
        if (deleteItemIds.length > 0) {
            console.log("Items to delete:", deleteItemIds);
            $('#itemdeleteModal').modal('show'); // Show modal

        } else {
            alert("Please select at least one item to delete.");
        }
    }
    // Fix mass delete button click event
    $("#massDeleteBtn").on("click", function () {
        openItemDeleteModal();
        @* $('#itemdeleteModal').modal('show'); // Show modal *@

    });
    // Handle delete confirmation
    $(document).on("click", "#itemconfirmDeleteBtn", function () {
        console.log("Deleting Items:", deleteItemIds);
        $.ajax({
            url: '@Url.Action("DeleteItem", "Menu")',
            type: 'POST',
            data: { itemIds: deleteItemIds },
            success: function (response) {
                deleteItemIds = []; // Reset array
                if (response.success) {
                    @* alert('Items deleted successfully!'); *@
                        location.reload();
                } else { }
            },
            error: function (xhr, status, error) {
                deleteItemIds = []; // Reset array
                console.log('Error:', error);
            }
        });
    });

    @* --------------------------------------------------------ModifierGroup Checkbox------------------------------------------------------------------ *@

        $('#modgroupAll').on('change', 'input[name="modgroupCheckbox"]', function () {
            var modifierGroupId = $(this).val();
            var isChecked = $(this).prop('checked');

            if (isChecked) {
                console.log(modifierGroupId);
                $.ajax({
                    url: '/Menu/GetModifierGroupDetails',
                    type: 'GET',
                    data: { modifierGroupId: modifierGroupId },
                    success: function (response) {
                        if ($('#modifierGroupDetail').find(`.mod-group-${modifierGroupId}`).length === 0) {
                            $('#modifierGroupDetail').append(
                                `<div class="mod-group-${modifierGroupId} mod-group-detail mt-2">
                            ${response}
                        </div>`
                            );
                        }
                    },
                    error: function () {
                        console.log("Error loading modifier group details.");
                    }
                });
            } else {
                $('#modifierGroupDetail').find(`.mod-group-${modifierGroupId}`).remove();
            }
        });




</script>
