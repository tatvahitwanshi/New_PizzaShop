@model DataAccessLayer.ViewModels.MenuViewModel
<div class="container-fluid p-3 " style="height: 700px;">
    <div class="row">
        <div class="col-2 ">
            <div class="row d-none d-xl-flex flex-column">
                <div class="">
                    <span class="h4 fw-bold " style="color: #0066A7;">Modifier Group
                        <button type="button" data-bs-toggle="modal" data-bs-target="#addmodifer"
                            style="text-decoration: none; border: none; background-color: white;"><i
                                class="bi bi-plus-square ms-2 h5"></i>
                        </button>

                    </span>
                </div>
                <div class="modifier overflow-auto mt-3">
                    @foreach (var modifier in Model.ModifierGroupModel)
                    {
                        <a class="justify-content-start align-items-center modifier-inner-box mt-2 text-reset"
                            style="text-decoration: none;" href="javascript:void(0);"
                            onclick="LoadPartialModifierView(@modifier.ModifierGroupId)">

                            <div class="mb-3 name-sidebar ms-1 active-name" id="modifier-container">
                                <img src="~/images/logos/sixdot.png" alt="" style="width:20px; height: 15px;"
                                    class="active-icon">
                                @modifier.ModifierGroupName
                                <a class="editButtom" href="javascript:void(0);" style="text-decoration: none; color: grey;"
                                    id="editModifier" onclick="openEditModifierModal(@modifier.ModifierGroupId)">
                                    <i class="bi bi-pen float-end"></i>
                                </a>
                                <a class="deleteButton" href="javascript:void(0);"
                                    style="text-decoration: none; color: grey;"
                                    onclick="openModifierGroupDeleteModal(@modifier.ModifierGroupId)">
                                    <i class="bi bi-trash float-end"></i>
                                </a>


                            </div>
                        </a>
                    }

                </div>

            </div>

            <!-- Model Add Modifier -->

            @* <form method="post" asp-action="AddModifierGroup" asp-controller="Menu">
                <div class="modal fade" id="addmodifer" data-bs-backdrop="static" data-bs-keyboard="false"
                    tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" >
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="staticBackdropLabel">Add
                                    Modifier Group</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" id="Modifiersgroupid" name="Modifiersgroupid"> 
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control" id="Modifiersgroupname" name="Modifiersgroupname"
                                        placeholder="Category Name" required>
                                    <label for="Modifiersgroupname">Name</label>
                                </div>
                                <div class="form-floating">
                                    <textarea class="form-control" name="Modifiersgroupdescription" id="Modifiersgroupdescription"
                                        placeholder="Enter Description"></textarea>
                                    <label for="Modifiersgroupdescription">Description</label>
                                </div>
                                <div class="mt-3" >
                                    <a href="">+ Add Existing Modifier</a>
                                </div>
                                <div class="col mt-3 mb-3 d-flex justify-content-end">
                                    <button class="btn text-white me-2" style="background-color: #0066A7;"
                                        type="submit">Save</button>
                                    <button class="btn" style="border-color: #0066A7; color: #0066A7;" type="button"
                                        data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form> *@

            <form method="post" asp-action="AddModifierGroup" asp-controller="Menu">
                <div class="modal fade" id="addmodifer" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                    aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="modalTitle">Add Modifier Group</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Form Section -->
                                <div id="formSection">
                                    <input type="hidden" id="SelectedModifierIds" name="SelectedModifierIds">
                                    <input type="hidden" id="Modifiersgroupid" name="Modifiersgroupid">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="Modifiersgroupname"
                                            name="Modifiersgroupname" placeholder="Category Name" required>
                                        <label for="Modifiersgroupname">Name</label>
                                    </div>
                                    <div class="form-floating">
                                        <textarea class="form-control" name="Modifiersgroupdescription"
                                            id="Modifiersgroupdescription" placeholder="Enter Description"></textarea>
                                        <label for="Modifiersgroupdescription">Description</label>
                                    </div>
                                    <div class="mt-3">
                                        <a href="#" id="showTable">+ Add Existing Modifier</a>
                                    </div>
                                    <div id="selectedItemsContainer" class="mt-3 d-flex flex-wrap"
                                        style="display: none;">
                                        <!-- Selected items will be added here dynamically -->
                                    </div>



                                    <div class="col mt-3 mb-3 d-flex justify-content-end">
                                        <button class="btn text-white me-2" style="background-color: #0066A7;"
                                            type="submit">Save</button>
                                        <button class="btn" style="border-color: #0066A7; color: #0066A7;" type="button"
                                            data-bs-dismiss="modal">Cancel</button>
                                    </div>
                                </div>

                                <!-- Table Section (Hidden Initially) -->

                                <div id="tableSection" style="display: none;">
                                    <div class="d-flex  me-2 p-1 position-relative">
                                        <input class="search_input form-control me-2 border-0" type="text"
                                            placeholder="Search" aria-label="Search" id="searchInputModifierAll">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23"
                                            fill="currentColor" class="bi bi-search position-absolute search-icon-main"
                                            viewBox="0 0 16 16">
                                            <path
                                                d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                                        </svg>
                                    </div>
                                    <div class="" id="GetAllModifierItems">
                                        <partial name="_ExistingModifierItemModal.cshtml"></partial>

                                    </div>

                                    <!-- Back Button -->
                                    <div class="d-flex justify-content-end mt-3">
                                        <button class="btn " id="backToForm"
                                            style="border-color: #0066A7; color: #0066A7; text-decoration: none;">
                                            Add</button>
                                        <button class="btn ms-2" id="backToForm1"
                                            style="border-color: #0066A7; color: #0066A7; text-decoration: none;">
                                            Cancel</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>



            <!-- Model Edit Modifier -->
            <form method="post" asp-action="UpdateModififerGroup" asp-controller="Menu">
                <div class="modal fade" id="editmodifiermodel" data-bs-backdrop="static" data-bs-keyboard="false"
                    tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="editModalTitle">Edit Modifier Group</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="" id="editModifierFormSection">
                                    <input type="hidden" id="editModifierId" name="ModifierGroupId">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="editModifierName"
                                            name="ModifierGroupName" placeholder="Category Name" required>
                                        <label for="editModifierName">Name</label>
                                    </div>
                                    <div class="form-floating">
                                        <textarea class="form-control" name="ModifierGroupDescription"
                                            id="editModifierDescription" placeholder="Enter Description"></textarea>
                                        <label for="editModifierDescription">Description</label>
                                    </div>
                                    <div class="mt-3">
                                        <a href="#" id="editShowTable">+ Add Existing Modifier</a>
                                    </div>
                                    <div class="col mt-3 mb-3 d-flex justify-content-end">
                                        <button class="btn text-white me-2" style="background-color: #0066A7;"
                                            type="submit">Save</button>
                                        <button class="btn" style="border-color: #0066A7; color: #0066A7;" type="button"
                                            data-bs-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                                <div class="" id="editTableSection" style="display: none;">
                                    <div class="d-flex me-2 p-1 position-relative">
                                        <input class="search_input form-control me-2 border-0" type="text"
                                            placeholder="Search" aria-label="Search" id="searchInputModifierEdit">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23"
                                            fill="currentColor" class="bi bi-search position-absolute search-icon-main"
                                            viewBox="0 0 16 16">
                                            <path
                                                d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                                        </svg>
                                    </div>

                                    <div id="GetAllModifierItemsEdit">
                                        <partial name="_ExistingModifierItemModal.cshtml"></partial>
                                    </div>

                                    <!-- Back Button -->
                                    <div class="d-flex justify-content-end mt-3">
                                        <button class="btn " id="editBackToForm"
                                            style="border-color: #0066A7; color: #0066A7; text-decoration: none;">Add</button>
                                        <button class="btn ms-2" id="editBackToForm1"
                                            style="border-color: #0066A7; color: #0066A7; text-decoration: none;">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

            <!-- Model Delete -->
            <div class="modal fade" id="deleteModifierGroupModal" data-bs-backdrop="static" data-bs-keyboard="false"
                tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="d-flex justify-content-center">
                                <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt=""
                                    style="width: 10%; height: 10%;">
                            </div>
                            <div class="d-flex justify-content-center mt-3">
                                <span class="text-muted">Are you sure you want to delete this Category?</span>
                            </div>
                            <div class="d-flex justify-content-center mt-3">
                                <button class="btn text-white" style="background-color: #0066A7;" type="button"
                                    id="confirmModifierGroupDelete">Yes</button>
                                <button class="btn ms-2" style="border-color: #0066A7; color: #0066A7;" type="button"
                                    data-bs-dismiss="modal">No</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-10" id="modifierContainer">
            <partial name="_PartialModifier.cshtml" , model="Model"></partial>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<script>
     let selectedModifierIds = [];
    $(document).on("change", "input[name='addmodgroupCheckbox']", function () {
        let modId = $(this).val(); // Get the Modifier Group ID
        let modName = $(this).parent().text().trim(); // Get the Modifier Group Name
        let selectedContainer = $("#addselectedItemsContainer");
        console.log(modId);
        console.log(modName);

        if ($(this).is(":checked")) {
            // Append selected modifier to display
            selectedContainer.append(`<span class="badge m-1 selected-modifier text-black" data-id="${modId}">${modName}</span>`);
            selectedModifierIds.push(modId); // Add to selected list

        } else {
            // Remove from display if unchecked
            selectedContainer.find(`.selected-modifier[data-id='${modId}']`).remove();
            selectedModifierIds = selectedModifierIds.filter(id => id !== modId); // Remove from list
        }
        console.log(selectedModifierIds);

        // Store selected modifier group IDs in hidden input field
        $("#modifierGroupIdsInput").val(selectedModifierIds.join(","));
    });

    @* --------------------------------load modifier item----------------------------------- *@
        function loadModifier(pageSize, searchKey, pageNumber, modgroup = 0) {
            console.log("Page Size:", pageSize, "Search Key:", searchKey, "Page Number:", pageNumber);
            var ModifierGroupId;
            if (modgroup == 0) {
                ModifierGroupId =@Model.ModifierItemViewModel.ParentId;

            }
            else {
                ModifierGroupId = modgroup;
            }

            $.ajax({
                url: '@Url.Action("GetModifierItemsByModifierGroup", "Menu")',
                type: 'GET',
                data: {
                    modifiergroupid: ModifierGroupId,
                    PageSize: pageSize,
                    SearchKey: searchKey,
                    PageNumber: pageNumber
                },
                success: function (data) {
                    $("#modifierContainer").html(data);
                },
                error: function (error) {
                    console.error('Error loading partial view:', error);
                    $("#modifierContainer").html("<p>Error loading items.</p>");
                }
            });
        }

    function updatePagePerSizeForModifier(modgroup) {
        console.log("jgsdfuysf");
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = 1;

        loadModifier(pageSize, searchKey, pageNumber, modgroup);

    }


    function PanginationBtnModifier(pagenumber, modgroup) {
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = pagenumber;

        @* if (direction === "back") {
            pageNumber -= 1;
        } else {
            pageNumber += 1;
        } *@

            loadModifier(pageSize, searchKey, pageNumber, modgroup);
    }

    function searchModifierEnter(event) {
        if (event.key === "Enter") {
            searchItems();
        }
    }
    document.addEventListener('keydown', function (event) {
        // Check if the pressed key is the Enter key
        if (event.key === 'Enter') {
            // Do something when Enter is pressed
            console.log('Enter key was pressed!');
            searchItems();
        }
    });

    function searchItems() {
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = @Model.ModifierItemViewModel.PageNumber;

        loadModifier(pageSize, searchKey, pageNumber);
    }

    function LoadPartialModifierView(modifierGroupId) {
        console.log("Modifier ID:", modifierGroupId);

        // Show loading animation
        $("#modifierContainer").html("<p>Loading...</p>");

        $.ajax({
            url: '@Url.Action("GetModifierItemsByModifierGroup", "Menu")',
            type: 'GET',
            data: { modifiergroupid: modifierGroupId },
            success: function (data) {
                console.log('Partial view loaded successfully:', data);
                $("#modifierContainer").html(data);
            },
            error: function (error) {
                console.error('Error loading partial view:', error);
                $("#modifierContainer").html("<p>Error loading items.</p>");
            }
        });
    }

    function GetModifiersItemDetail(id) {
        console.log("hiiii");
        @* $("#editModifieritemModal").modal("show"); *@
            $.ajax({
                type: "GET",
                url: "/Menu/GetModifierItemDetails",
                data: { id: id },
                success: function (response) {
                    // Replace modal content with the response (partial view)
                    $("#editModifieritemModal .modal-content").html(response);

                    // Show the modal
                    $("#editModifieritemModal").modal("show");
                },
                error: function (xhr, status, error) {
                    console.log("Error Response:", xhr.responseText);
                    toastr.error("Failed to fetch modifier item details.");
                }
            });
    }

    @* document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("showTable").addEventListener("click", function (e) {
            e.preventDefault();
            document.getElementById("formSection").style.display = "none";
            document.getElementById("tableSection").style.display = "block";
            document.getElementById("modalTitle").innerText = "Select Modifier Items";
        });
        document.getElementById("backToForm").addEventListener("click", function () {
            document.getElementById("formSection").style.display = "block";
            document.getElementById("tableSection").style.display = "none";
            document.getElementById("modalTitle").innerText = "Add Modifier Group";
        });
        document.getElementById("backToForm1").addEventListener("click", function () {
            document.getElementById("formSection").style.display = "block";
            document.getElementById("tableSection").style.display = "none";
            document.getElementById("modalTitle").innerText = "Add Modifier Group";
        });
        //For the Close Button 
        var modalElement = document.getElementById('addmodifer');
        modalElement.addEventListener('hidden.bs.modal', function () {
            document.getElementById("formSection").style.display = "block";
            document.getElementById("tableSection").style.display = "none";
            document.getElementById("modalTitle").innerText = "Add Modifier Group";
        });
    }); *@

        document.addEventListener("DOMContentLoaded", function () {
            // Show Table Section in Edit Modal
            document.getElementById("editShowTable").addEventListener("click", function (e) {
                e.preventDefault();
                document.getElementById("editModifierFormSection").style.display = "none";
                document.getElementById("editTableSection").style.display = "block";
                document.getElementById("editModalTitle").innerText = "Select Modifier Items";
            });

            // Back to Form from Table
            document.getElementById("editBackToForm").addEventListener("click", function () {
                document.getElementById("editModifierFormSection").style.display = "block";
                document.getElementById("editTableSection").style.display = "none";
                document.getElementById("editModalTitle").innerText = "Edit Modifier Group";
            });

            document.getElementById("editBackToForm1").addEventListener("click", function () {
                document.getElementById("editModifierFormSection").style.display = "block";
                document.getElementById("editTableSection").style.display = "none";
                document.getElementById("editModalTitle").innerText = "Edit Modifier Group";
            });

            // Reset Modal on Close
            var editModalElement = document.getElementById('editmodifiermodel');
            editModalElement.addEventListener('hidden.bs.modal', function () {
                document.getElementById("editModifierFormSection").style.display = "block";
                document.getElementById("editTableSection").style.display = "none";
                document.getElementById("editModalTitle").innerText = "Edit Modifier Group";
            });
        });



    @* --------below is for add existing modifier--------- *@

        $(document).ready(function () {
            let selectedItems = {}; // Store selected items persistently
            let selectedIds = []; // Store selected modifier IDs

            // Show table section
            $("#showTable").click(function (e) {
                e.preventDefault();
                $("#formSection").hide();
                $("#tableSection").show();
                $("#modalTitle").text("Select Modifier Items");
            });

            // Hide table section and show form section
            $("#backToForm, #backToForm1").click(function () {
                $("#formSection").show();
                $("#tableSection").hide();
                $("#modalTitle").text("Add Modifier Group");
            });

            // Restore checkbox state when table is loaded or paginated
            function restoreCheckboxState() {
                $(".inner-check").each(function () {
                    let itemId = $(this).data("id");
                    if (selectedItems[itemId]) {
                        $(this).prop("checked", true);
                    }
                });
            }

            // Handle checkbox selection
            $(document).on("change", ".inner-check", function () {
                let itemId = $(this).data("id");
                let itemName = $(this).closest("tr").find("td:nth-child(2)").text().trim();

                if ($(this).is(":checked")) {
                    selectedItems[itemId] = { id: itemId, name: itemName };
                } else {
                    delete selectedItems[itemId];
                }

                updateSelectedItems();
            });

            // Capture selected items when clicking "Add"
            $("#backToForm").click(function () {
                console.clear();
                console.log(" Adding Selected Items...");
                updateSelectedItems();
            });

            // Function to update the selected items display & hidden input field
            function updateSelectedItems() {
                let container = $("#selectedItemsContainer");
                container.empty(); // Clear previous items
                selectedIds = Object.keys(selectedItems); // Store only modifier IDs

                if (selectedIds.length > 0) {
                    container.show(); // Show the container

                    Object.values(selectedItems).forEach(item => {
                        container.append(`
                <div class="selected-item badge text-black me-2 mb-2 p-2 d-flex align-items-center border">
                    <span class="me-2">${item.name}</span>
                    <button type="button" class="btn-close remove-item" aria-label="Close" data-id="${item.id}"></button>
                </div>
                `);
                    });
                } else {
                    container.hide(); // Hide when no items
                }

                // Update hidden input field with selected IDs
                $("#SelectedModifierIds").val(selectedIds.join(","));
                console.log("Final Selected Items:", selectedIds);
            }

            // Remove item when clicking the close button
            $(document).on("click", ".remove-item", function () {
                let itemId = $(this).data("id");

                delete selectedItems[itemId];
                $(`.inner-check[data-id="${itemId}"]`).prop("checked", false); // Uncheck in table

                updateSelectedItems();
            });

            // Restore checked state when paginating or switching pages
            $(document).on("click", ".pagination a", function () {
                setTimeout(() => {
                    restoreCheckboxState();
                }, 200); // Delay to ensure new elements are loaded
            });

            // Reset selected items when modal is closed
            $("#addmodifer").on("hidden.bs.modal", function () {
                console.log("Modal closed. Resetting selected items.");
                selectedItems = {};
                updateSelectedItems();
            });

            // Initial restoration (in case of page reload)
            restoreCheckboxState();
        });

    @* ------Load the partail view for all the modifier item---------- *@
        $(document).ready(function () {
            $('#addmodifer, #editmodifiermodel').on('shown.bs.modal', function () {
                loadModifierItems();
            });

            function loadModifierItems(pageNumber = 1, pageSize = 5, searchKey = '') {
                $.ajax({
                    url: '/Menu/GetModifierItemsAllByModifierGroup',
                    type: 'GET',
                    data: {
                        PageNumber: pageNumber,
                        PageSize: pageSize,
                        SearchKey: searchKey
                    },
                    success: function (response) {
                        if ($('#addmodifer').hasClass('show')) {
                            $('#GetAllModifierItems').html(response);
                        } else if ($('#editmodifiermodel').hasClass('show')) {
                            $('#GetAllModifierItemsEdit').html(response);
                        }
                    },
                    error: function () {
                        alert("Error loading modifier items.");
                    }
                });
            }
        });
    $('#addModal, #editModal').on('hidden.bs.modal', function () {
        location.reload();
    });

</script>