@model DataAccessLayer.ViewModels.MenuViewModel

<div class="row">
    <div class="col">
        <span class="h4 fw-bold " style="color: #0066A7;" data-bs-toggle="offcanvas" href="#offcanvasExample1"
            role="button1" aria-controls="offcanvasExample1">Modifiers</span>
    </div>
</div>
<div class="row">
    <div class="col-12 d-flex justify-content-end">
        <form class="d-flex " role="search">
            <div class="d-flex  me-2 p-1 position-relative">
                <input class="search_input form-control me-2 border-0" type="text" placeholder="Search"
                    aria-label="Search" id="searchInputModifier">
                <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor"
                    class="bi bi-search position-absolute search-icon-main" viewBox="0 0 16 16">
                    <path
                        d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
            </div>
            <div class="  btn border " id="massDeleteBtn"><i class="bi bi-trash h4 text-muted"></i></div>
            <button class="btn text-white d-none d-md-block ms-2" style=" background-color: #0066A7;" type="button"
               data-bs-target="#addModifieritemModal" data-bs-toggle="modal">
                +New Modifier</button>
            <button class="btn text-white d-md-none ms-2" style=" background-color: #0066A7;">+</button>
        </form>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"><input class="form-check-input main-check" type="checkbox" value=""
                                id="selectAllCheckbox"></th>
                        <th scope="col">Name</th>
                        <th scope="col">Unit</th>
                        <th scope="col">Rate </th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody id="itemsTableBody">
                    @foreach (var item in Model.ModifierItemViewModel.List)
                    {
                        <tr>
                            <td>
                                <input class="form-check-input inner-check" type="checkbox" data-id="@item.ModifierItemId">
                            </td>
                            <td>
                                @item.ModifierItemName
                            </td>
                            <td>@item.ModifierUnitname</td>
                            <td>@item.Rate</td>
                            <td>@item.Quantity</td>
                            <td>
                                <div class="d-flex">
                                    <a href="#" style="text-decoration: none; color: grey;" data-bs-toggle="modal"
                                        data-bs-target="#edititemModal" onclick="GetItemDetails(@item.ModifierItemId)">
                                        <i class="bi bi-pen"></i>
                                    </a>
                                    <a href="#" class="ms-4" style="text-decoration: none; color: grey;"
                                        data-bs-toggle="modal" data-bs-target="#itemdeleteModal"
                                        onclick="openItemDeleteModal(@item.ModifierItemId)"><i class="bi bi-trash"></i></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="main-pagination ">
            <div class="item-show ">
                <nav aria-label="Page navigation example">
                    <div class="pagination ">
                        <span class="align-self-center">Items Per Page
                            :</span>
                        <select class="form-select form-select-sm ms-2 align-self-center"
                            aria-label="Small select example" style=" width: unset; " id="pageSizeDropdownModifier"
                             onchange="updatePagePerSize()">
                            @if (Model.ModifierItemViewModel?.PageSize != null)
                            {
                                <option value="1" selected="@(Model.ModifierItemViewModel.PageSize == 1 ? true : false)">1
                                </option>
                                <option value="3" selected="@(Model.ModifierItemViewModel.PageSize == 3 ? true : false)">3
                                </option>
                                <option value="5" selected="@(Model.ModifierItemViewModel.PageSize == 5 ? true : false)">5
                                </option>
                                <option value="10" selected="@(Model.ModifierItemViewModel.PageSize == 10 ? true : false)">
                                    10</option>
                                <option value="25" selected="@(Model.ModifierItemViewModel.PageSize == 25 ? true : false)">
                                    25</option>
                            }
                        </select>

                    </div>
                </nav>
            </div>
            <div class="showing-page">
                <nav aria-label="Page navigation example">
                    <div class="pagination ">
                        <span class=" ms-2  align-self-center">Showing
                            @{
                                var startRecord = (Model.ModifierItemViewModel.PageNumber - 1) *
                                Model.ModifierItemViewModel.PageSize + 1;
                                var endRecord = Model.ModifierItemViewModel.PageNumber *
                                Model.ModifierItemViewModel.PageSize;
                                if (endRecord > Model.ModifierItemViewModel.Count)
                                    endRecord = Model.ModifierItemViewModel.Count;

                                if (Model.ModifierItemViewModel.Count == 0)
                                {
                                    startRecord = 0;
                                    endRecord = 0;
                                }
                            }
                            <span style="color: green;" class="me-1">@startRecord - @endRecord</span> of <span
                                style="color: red;" class="ms-1">@Model.ModifierItemViewModel.Count</span>
                        </span>
                        <button class="btn border ms-2  align-self-center" type="submit"
                            onclick="PanginationBtnModifier('back')"><i class="bi bi-chevron-left "></i>
                        </button>
                        <button class="btn border ms-2  align-self-center" type="submit"
                            onclick="PanginationBtnModifier('next')"><i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </nav>
            </div>

        </div>
    </div>
</div>

@* Delete Item Model *@
<div class="modal fade" id="itemdeleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="" style="width: 10%; height: 10%;">
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <span class="text-muted">Are you sure you want to delete this Item?</span>
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <button class="btn text-white" style="background-color: #0066A7;" type="button"
                        id="itemconfirmDeleteBtn">Yes</button>
                    <button class="btn ms-2" style="border-color: #0066A7; color: #0066A7;" type="button"
                        data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* Add Modidfier  *@

<div class="modal " id="addModifieritemModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false"
    aria-labelledby="staticBackdropLabel" aria-hidden=" true">
    <div class="modal-dialog modal-dialog-centered modal-xl"  style="width:95% !important">
        <div class="modal-content p-4">
            <div class="d-flex justify-content-between">
                <h5 class="modal-title">Add Modifier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form>
                <div class="row g-3">
                    <div class="col-md-6">
                       <div class="dropdown w-100 h-100 border">
                        <div class="btn dropdown-toggle w-100 d-flex justify-content-between align-items-center "
                            type="button" data-bs-toggle="dropdown" style="border: none !important;">
                            Select Modifier Option(s)
                        </div>
                        <div id="selectedItemsContainer" class="d-flex  flex-wrap p-2 ">
                            <!-- Selected items will be displayed here -->
                        </div>
                        <ul class="dropdown-menu p-2" style="max-height: 200px; overflow-y: auto; "
                            aria-labelledby="multiSelectDropdown">
                             @foreach (var modgroup in Model.ModifierGroupModel)
                                {
                                    <li>
                                        <label class="dropdown-item">
                                            <input type="checkbox" value="@modgroup.ModifierGroupId" class="me-2"
                                                name="modgroupCheckbox"> @modgroup.ModifierGroupName
                                        </label>
                                    </li>
                                }
                        </ul>
                    </div>

                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="name" placeholder="Name" value="Large">
                            <label for="name">Name*</label>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="rate" placeholder="Rate" value="300">
                            <label for="rate">Rate*</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="quantity" placeholder="Quantity" value="1">
                            <label for="quantity">Quantity*</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <select class="form-select" id="unit">
                                <option selected>Pieces</option>
                                <option value="kg">Kilograms</option>
                                <option value="ltr">Liters</option>
                            </select>
                            <label for="unit">Unit*</label>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-floating">
                            <textarea class="form-control" id="description" placeholder="Description"
                                style="height: 80px;">large</textarea>
                            <label for="description">Description</label>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" id="savebtn" class="btn text-white" style="background-color: #0066A7;"
                        type="submit">Save</button>
                    <button type="button" class="btn ms-2"
                        style="border-color: #0066A7; color: #0066A7; text-decoration: none;"
                        data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap Bundle (includes Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>

    @* function openaddModifierGroup() {
        ("#addModifieritemModal").model('show');
    } *@


    function loadModifier(pageSize, searchKey, pageNumber) {
        console.log("Page Size:", pageSize, "Search Key:", searchKey, "Page Number:", pageNumber);

        $.ajax({
            url: '@Url.Action("GetModifierItemsByModifierGroup", "Menu")',
            type: 'GET',
            data: {
                modifiergroupid: @Model.ModifierItemViewModel.ParentId,
                PageSize: pageSize,
                SearchKey: searchKey,
                PageNumber: pageNumber
            },
            success: function (data) {
                $("#modifierContainer").html(data);
            },
            error: function (error) {
                console.error('Error loading partial view:', error);
                $("#modifierContainer").html("<p>Error loading items.</p>");
            }
        });
    }

    function updatePagePerSize() {
        console.log("jgsdfuysf");
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = @Model.ModifierItemViewModel.PageNumber; 

        loadModifier(pageSize, searchKey, pageNumber);

    }


    function PanginationBtnModifier(direction) {
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = @Model.ModifierItemViewModel.PageNumber;

        if (direction === "back") {
            pageNumber -= 1;
        } else {
            pageNumber += 1;
        }

        loadModifier(pageSize, searchKey, pageNumber);
    }

    function searchModifierEnter(event) {
        if (event.key === "Enter") {
            searchItems();
        }
    }
    document.addEventListener('keydown', function (event) {
        // Check if the pressed key is the Enter key
        if (event.key === 'Enter') {
            // Do something when Enter is pressed
            console.log('Enter key was pressed!');
            searchItems();
        }
    });

    function searchItems() {
        var pageSize = $("#pageSizeDropdownModifier").val();
        var searchKey = $("#searchInputModifier").val();
        var pageNumber = @Model.ModifierItemViewModel.PageNumber;

        loadModifier(pageSize, searchKey, pageNumber);
    }

</script>